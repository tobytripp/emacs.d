#+SETUPFILE: ~/.emacs.d/org-init/level-0.orgsetup
* General Emacs Configurations

** Emacs Server
   This sets it up such that, when =C-x k= is pressed, an active
   emacsclient session will be closed.  First, it clones any active
   local keymaps if they exist.

   #+BEGIN_SRC emacs-lisp
     (add-hook 'server-switch-hook
               (lambda ()
                 (when (current-local-map)
                   (use-local-map (copy-keymap (current-local-map))))
                 (when server-buffer-clients
                   (local-set-key (kbd "C-x k") 'server-edit))))
   #+END_SRC

   Start the emacs server, if it isn't running already.
   #+BEGIN_SRC emacs-lisp
     (if (and (fboundp 'server-running-p)
              (not (server-running-p)))
         (server-start))
   #+END_SRC

** Abbrev-Mode

   #+BEGIN_SRC emacs-lisp
     (setq abbrev-file-name "~/.emacs.d/abbrev_defs")
     (setq save-abbrevs t)
     (setq abbrev-mode t)
   #+END_SRC

** Tabs?!
   #+BEGIN_SRC emacs-lisp
   (setq tab-width 2)
   #+END_SRC

** Change "yes or no" to "y or n"

   #+BEGIN_SRC emacs-lisp
     (fset 'yes-or-no-p 'y-or-n-p)
   #+END_SRC

** UI
   Set native vs non-native fullscreen on the Mac:
   #+BEGIN_SRC emacs-lisp
   ;; (setq ns-use-native-fullscreen nil)
   (setq ns-use-native-fullscreen t)
   #+END_SRC

   Be less aggressive when vertically splitting my windows: (default 80)
   #+BEGIN_SRC emacs-lisp
   (setq split-height-threshold 110)
   #+END_SRC

   #+BEGIN_QUOTE
   Minimum height for splitting windows sensibly.
   If this is an integer, ‘split-window-sensibly’ may split a window
   vertically only if it has at least this many lines.
   #+END_QUOTE

** UTF-8

   #+BEGIN_SRC emacs-lisp
     (prefer-coding-system 'utf-8)
     (when (display-graphic-p)
       (setq x-select-request-type '(UTF8_STRING COMPOUND_TEXT TEXT STRING)))
   #+END_SRC

** Save Hooks
   I don't like it when =delete-trailing-whitespace= moves my cursor
   around when it finds I'm sitting on some white-space.  It just ends
   up kicking back my indentation for something I was just about to
   start typing.
   #+BEGIN_SRC emacs-lisp
     (defun toby/delete-trailing-whitespace ()
       "Ignore current line when deleting trailing whitespace"
       (interactive)
       (let ((first-part-start (point-min))
             (first-part-end   (point-at-bol))
             (second-part-start (point-at-eol))
             (second-part-end  (point-max)))
         (delete-trailing-whitespace first-part-start first-part-end)
         (delete-trailing-whitespace second-part-start second-part-end)))
   #+END_SRC

   Clean-up trailing white-space on save.
   #+BEGIN_SRC emacs-lisp
     (add-hook 'before-save-hook 'toby/delete-trailing-whitespace)
   #+END_SRC

** Dired Mode
   Set =ls= flags and load some dired extensions.
   #+BEGIN_SRC emacs-lisp
     (setq dired-listing-switches "-alh")
     (require 'dired-x)

     (require-package 'dired+)
     (require 'dired+)
   #+END_SRC

** Kill-Ring
   #+BEGIN_SRC emacs-lisp
   (require-package 'browse-kill-ring)
   (browse-kill-ring-default-keybindings)
   #+END_SRC

** iSearch
   #+BEGIN_SRC emacs-lisp
     (require-package 'ag)

     (require-package 'isearch+)
     (eval-after-load "isearch" '(require 'isearch+))
   #+END_SRC

** ADOPTED Multiple Cursors

   - State "ADOPTED"    from "REJECTED"   [2017-07-06 Thu 14:32]

   #+BEGIN_SRC emacs-lisp
     (require-package 'multiple-cursors)
     (autoload 'mc/edit-lines "multiple-cursors" "Multiple Cursors" t)

     (global-set-key (kbd "C-S-c C-S-c") 'mc/edit-lines)

     (autoload 'mc/mark-next-like-this "multiple-cursors" "Multiple Cursors" t)
     (autoload 'mc/mark-previous-like-this "multiple-cursors" "Multiple Cursors" t)
     (autoload 'mc/mark-all-like-this "multiple-cursors" "Multiple Cursors" t)

     (global-set-key (kbd "C->") 'mc/mark-next-like-this)
     (global-set-key (kbd "C-<") 'mc/mark-previous-like-this)
     (global-set-key (kbd "C-c C-<") 'mc/mark-all-like-this)
   #+END_SRC

** ADOPTED Which-Key Mode

   - State "ADOPTED"    from "REJECTED"   [2017-07-06 Thu 14:31]
   - State "REJECTED"   from "EXPERIMENTAL" [2017-07-06 Thu 14:31]
   - State "EXPERIMENTAL" from              [2017-07-06 Thu 14:31]

   #+BEGIN_SRC emacs-lisp
     (require-package 'which-key)
     (which-key-mode)
   #+END_SRC

** Configuration

   #+BEGIN_SRC emacs-lisp
   (defun toby/reload-config ()
     "Reload ~/.emacs.d/init.el"
     (interactive)
     (load-file (concat user-emacs-directory "init.el")))

   (global-set-key (kbd "C-x x r") 'toby/reload-config)
   #+END_SRC

#+BEGIN_SRC emacs-lisp
(provide 'emacs-init)
#+END_SRC
