#+SETUPFILE: ~/.emacs.d/org-init/level-0.orgsetup
* LISP

** Highlight on Eval

   #+BEGIN_SRC emacs-lisp
     ;(require 'highlight)
     (require-package 'eval-sexp-fu)
   #+END_SRC

** ELisp

   Automatically byte-compile the current buffer:

   #+BEGIN_SRC emacs-lisp
     (defun byte-compile-current-buffer ()
       "`byte-compile' current buffer if it's emacs-lisp-mode and
         compiled file exists."
       (interactive)
       (when (and (eq major-mode 'emacs-lisp-mode)
                  (file-exists-p
                   (concat (file-name-sans-extension (buffer-file-name)) ".elc")))
         (byte-compile-file buffer-file-name)))

     (eval-after-load 'emacs-lisp-mode
       '(progn
          (require-package 'smartparens)
          (require 'smartparens-config)
          (sp-local-pair 'emacs-lisp-mode "`" "'")
          (sp-local-pair '(emacs-lisp-mode lisp-interaction-mode) "'" nil :actions nil)))

     (defun toby/emacs-lisp-init ()
       (smartparens-strict-mode)
       (add-hook 'after-save-hook 'byte-compile-current-buffer))

     (add-hook 'emacs-lisp-mode-hook #'toby/emacs-lisp-init)
     (add-hook 'lisp-interaction-mode-hook #'smartparens-strict-mode)
   #+END_SRC

** Paredit

*** TODO Need to think about some keybindings for =slurp=

    Something along the lines of:
    #+BEGIN_SRC emacs-lisp :tangle no
      (defun toby/paredit-init ()
        (progn
          (define-key paredit-mode-map (kbd "C-0") 'paredit-forward-slurp-sexp)
          (define-key paredit-mode-map (kbd "C-0") 'paredit-backward-slurp-sexp)
          ))

      (eval-after-load 'paredit-mode 'toby/paredit-init)
    #+END_SRC

#+BEGIN_SRC emacs-lisp
(provide 'lisp-init)
#+END_SRC
