#+SETUPFILE: ~/.emacs.d/org-init/level-0.orgsetup
* EMail Configurations
** EXPERIMENTAL mbsync
   - State "EXPERIMENTAL" from "TODO"       [2018-02-13 Tue 07:25]
   - State "TODO"       from              [2018-02-13 Tue 07:25]

   [[https://wiki.archlinux.org/index.php/Isync][ArchLinux Help Page]]
   [[http://isync.sourceforge.net/mbsync.html][mbsync man page]]
   [[http://pragmaticemacs.com/emacs/migrating-from-offlineimap-to-mbsync-for-mu4e/][Pragmatic Emacs mbsync Page]]

   #+BEGIN_SRC conf :tangle ~/.mbsyncrc
     IMAPAccount gmail
     Host imap.gmail.com
     Port 993
     User toby.tripp@gmail.com
     PassCmd "gpg2 -q --for-your-eyes-only --no-tty -d ~/.emacs.d/secrets/.authinfo.gpg | awk '/imap\.gmail/ { print $8 }'"
     AuthMechs LOGIN
     SSLType IMAPS
     #SSLVersions SSLv3
     SystemCertificates no
     CertificateFile /usr/local/etc/openssl/cert.pem

     IMAPStore gmail-remote
     Account gmail

     MaildirStore gmail-local
     # The trailing "/" is important
     Path ~/.mail/gmail/
     Inbox ~/.mail/gmail/Inbox
     SubFolders Verbatim

     #Channel gmail
     #Master :gmail-remote:
     #Slave :gmail-local:
     # 1 "*" TO MATCH EVERYTHING
     # 2 "!DIR" TO EXCLUDE "DIR"
     # 3 "DIR" TO MATCH DIR
     # Patterns * ![Gmail]* "[Gmail]/Sent Mail" "[Gmail]/Starred" "[Gmail]/All Mail"
     #Patterns *
     #Create Both
     #SyncState *

     Channel gmail-inbox
     Master :gmail-remote:
     Slave :gmail-local:
     Patterns "INBOX" "Record*" "Group*"
     Create Both
     SyncState *

     Channel gmail-trash
     Master :gmail-remote:"[Gmail]/Trash"
     Slave :gmail-local:trash
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-sent
     Master :gmail-remote:"[Gmail]/Sent Mail"
     Slave :gmail-local:sent
     Create Both
     Expunge Both
     SyncState *

     Channel gmail-archive
     Master ":gmail-remote:[Gmail]/All Mail"
     Slave :gmail-local:archive
     Create Both
     SyncState *

     # GROUPS PUT TOGETHER CHANNELS, SO THAT WE CAN INVOKE
     # MBSYNC ON A GROUP TO SYNC ALL CHANNELS
     #
     # FOR INSTANCE: "mbsync gmail" GETS MAIL FROM
     # "gmail-inbox", "gmail-sent", and "gmail-trash"
     #
     Group gmail
     Channel gmail-inbox
     Channel gmail-sent
     Channel gmail-trash
     Channel gmail-archive
   #+END_SRC

   #+BEGIN_SRC sh :tangle no
     mkdir -p ~/.mail/gmail
     mbsync -al
   #+END_SRC

   #+RESULTS:
   |-----------------------------------+---------|
   | gmail-inbox:                      |         |
   | INBOX                             |         |
   | Archive/Accounts                  |         |
   | Archive/Receipts                  |         |
   | Archive/Receipts/StrangeLoop 2012 |         |
   | Archive/Travel                    |         |
   | Groups                            |         |
   | Groups/CITCon                     |         |
   | Groups/Meetup                     |         |
   |-----------------------------------+---------|
   | gmail-trash:                      |         |
   | [Gmail]/Trash                     | trash   |
   |-----------------------------------+---------|
   | gmail-sent:                       |         |
   | [Gmail]/Sent Mail                 | sent    |
   |-----------------------------------+---------|
   | gmail-archive:                    |         |
   | [Gmail]/All Mail                  | archive |

** EXPERIMENTAL OfflineIMAP
   - State "EXPERIMENTAL" from              [2018-02-10 Sat 22:54]
*** TODO .offlineimaprc

    - State "TODO"       from              [2018-02-10 Sat 22:56]

    This config file should probably be managed in this repo (where it is
    used) rather in dotfiles.

** EXPERIMENTAL Wanderlust

   - State "EXPERIMENTAL" from              [2018-02-09 Fri 21:21]

   #+BEGIN_SRC emacs-lisp
   (require-package 'wanderlust)
   #+END_SRC

*** Wanderlust Customization
    [2018-02-12 Mon]

    [[elisp:(customize-group 'Wanderlust)][Wanderlust Group]]

*** Initialization

    [[http://emacs-fu.blogspot.com/2009/06/e-mail-with-wanderlust.html][Wanderlust Blog Post]]

    #+BEGIN_SRC emacs-lisp
      (require 'mime-setup)
      (autoload 'wl       "wl"       "Wanderlust" t)
      (autoload 'wl-draft "wl-draft" "Write draft with Wanderlust." t)
      (setq
       elmo-maildir-folder-path "~/.mail/gmail"
       wl-stay-folder-window t                       ;; show the folder pane (left)
       wl-folder-window-width 25                     ;; toggle on/off with 'i'
       wl-smtp-posting-server "smtp.gmail.com"
       wl-from "Toby Tripp <toby@tripp.net>"

       ;; hide many fields from message buffers
       wl-message-ignored-field-list '("^.*:")
       wl-message-visible-field-list
       '("^\\(To\\|Cc\\):"
         "^Subject:"
         "^\\(From\\|Reply-To\\):"
         "^Organization:"
         "^Message-Id:"
         "^Delivered-To:"
         "^\\(Posted\\|Date\\):"
         "^X-Keywords:")
       wl-message-sort-field-list
       '("^From"
         "^Organization:"
         "^X-Attribution:"
         "^Subject"
         "^Date"
         "^To"
         "^Cc"))
    #+END_SRC

*** TODO Configure OAuth2 Authentication
    - State "TODO"       from "EXPERIMENTAL" [2018-02-10 Sat 12:11]
    - State "EXPERIMENTAL" from              [2018-02-10 Sat 12:11]

    [[https://hobo.house/2017/07/17/using-offlineimap-with-the-gmail-imap-api/][Using Offlineimap with the Gmail IMAP API]] <2018-02-10 Sat 12:13>

*** EXPERIMENTAL Mail indexing with =mu=
    - State "EXPERIMENTAL" from              [2018-02-09 Fri 22:16]

    #+BEGIN_SRC sh
      brew install mu
      mu index --rebuild --maildir ~/Maildir
    #+END_SRC

**** EXPERIMENTAL Searching Emails

     - State "EXPERIMENTAL" from              [2018-02-09 Fri 22:17]

     [[https://emacs-fu.blogspot.com/2011/03/searching-e-mails-with-wanderlust-and.html][Emacs-Fu: Searching emails with wanderlust and mu]]

     Search =mu= index by typing =g= in folder or summary.

     #+BEGIN_SRC emacs-lisp
       (require 'elmo-search)
       (elmo-search-register-engine
        'mu 'local-file
        :prog "/usr/local/bin/mu"
        :args '("find" pattern "--fields" "l")
        :charset 'utf-8)

       (setq elmo-search-default-engine 'mu)
     #+END_SRC

     [[http://www.djcbsoftware.nl/code/mu/cheatsheet.html][mu cheat-sheet]]

     Also src_shell{man mu-find}.

*** EXPERIMENTAL =org-capture= Integration

    - State "EXPERIMENTAL" from              [2018-02-10 Sat 07:01]

    #+BEGIN_SRC emacs-lisp
    (require 'org-wl)
    #+END_SRC

    With this, you can mark text in a Wanderlust email view and type =C-c c e=
    to create an =org= node with the marked contents.  Meta-data about the
    current email will automatically be included.

*** EXPERIMENTAL Setting wanderlust as the Emacs Mail composer

    - State "EXPERIMENTAL" from              [2018-02-10 Sat 22:42]
    #+BEGIN_SRC emacs-lisp
      (autoload 'wl-user-agent-compose "wl-draft" nil t)
      (if (boundp 'mail-user-agent)
          (setq mail-user-agent 'wl-user-agent))

      (if (fboundp 'define-mail-user-agent)
          (define-mail-user-agent
            'wl-user-agent
            'wl-user-agent-compose
            'wl-draft-send
            'wl-draft-kill
            'mail-send-hook))
    #+END_SRC

*** Starting Up for Reading

    =M-x wl=

